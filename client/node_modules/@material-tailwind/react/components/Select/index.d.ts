import React from "react";
import { usePrevious, useSelect } from "./SelectContext";
import type { variant, color, size, label, error, success, arrow, value, onChange, selected, offset, dismiss, animate, lockScroll, labelProps, menuProps, className, disabled, name, children, containerProps } from "../../types/components/select";
import { SelectOption, SelectOptionProps } from "./SelectOption";
export interface SelectProps extends Omit<React.ComponentProps<"div">, "value" | "onChange"> {
    variant?: variant;
    color?: color;
    size?: size;
    label?: label;
    error?: error;
    success?: success;
    arrow?: arrow;
    value?: value;
    onChange?: onChange;
    selected?: selected;
    offset?: offset;
    dismiss?: dismiss;
    animate?: animate;
    lockScroll?: lockScroll;
    labelProps?: labelProps;
    menuProps?: menuProps;
    className?: className;
    disabled?: disabled;
    name?: name;
    children: children;
    containerProps?: containerProps;
}
declare const Select: React.ForwardRefExoticComponent<Omit<SelectProps, "ref"> & React.RefAttributes<HTMLDivElement>>;
export type { SelectOptionProps };
export { Select, SelectOption as Option, useSelect, usePrevious };
declare const _default: React.ForwardRefExoticComponent<Omit<SelectProps, "ref"> & React.RefAttributes<HTMLDivElement>> & {
    Option: {
        ({ value, index, disabled, className, children, ...rest }: SelectOptionProps): React.JSX.Element;
        propTypes: {
            value: any;
            index: any;
            disabled: any;
            className: any;
            children: any;
        };
        displayName: string;
    };
};
export default _default;
//# sourceMappingURL=index.d.ts.map