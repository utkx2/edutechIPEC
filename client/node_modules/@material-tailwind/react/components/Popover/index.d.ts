import React from "react";
import { usePopover } from "./PopoverContext";
import type { open, handler, placement, offset, dismiss, animate, children } from "../../types/components/popover";
import { PopoverHandler, PopoverHandlerProps } from "./PopoverHandler";
import { PopoverContent, PopoverContentProps } from "./PopoverContent";
export interface PopoverProps {
    open?: open;
    handler?: handler;
    placement?: placement;
    offset?: offset;
    dismiss?: dismiss;
    animate?: animate;
    children: children;
}
declare const Popover: {
    ({ open, handler, placement, offset, dismiss, animate, children, }: PopoverProps): React.JSX.Element;
    propTypes: {
        open: any;
        handler: any;
        placement: any;
        offset: any;
        dismiss: any;
        animate: any;
        children: any;
    };
    displayName: string;
};
export type { PopoverHandlerProps, PopoverContentProps };
export { Popover, PopoverHandler, PopoverContent, usePopover };
declare const _default: {
    ({ open, handler, placement, offset, dismiss, animate, children, }: PopoverProps): React.JSX.Element;
    propTypes: {
        open: any;
        handler: any;
        placement: any;
        offset: any;
        dismiss: any;
        animate: any;
        children: any;
    };
    displayName: string;
} & {
    Handler: React.ForwardRefExoticComponent<Omit<PopoverHandlerProps, "ref"> & React.RefAttributes<HTMLDivElement>>;
    Content: React.ForwardRefExoticComponent<Omit<PopoverContentProps, "ref"> & React.RefAttributes<HTMLDivElement>>;
};
export default _default;
//# sourceMappingURL=index.d.ts.map